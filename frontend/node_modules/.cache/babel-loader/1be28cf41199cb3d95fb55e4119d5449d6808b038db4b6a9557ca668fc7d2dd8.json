{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'DashPrueba',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const droppedItems = ref([]); // Array to store dropped items\n    const loading = ref(false);\n    const selectedItems = ref([]);\n    const router = useRouter();\n    const dataModel = ref([{\n      name: \"Neumaticos\",\n      courier: \"DHL\"\n    }, {\n      name: \"Remeras\",\n      courier: \"DHL\"\n    }]);\n    const columnDefs = [{\n      field: \"Seleccionar\",\n      maxWidth: 140,\n      checkboxSelection: true,\n      headerCheckboxSelection: true\n    }, {\n      headerName: \"Transportista\",\n      field: \"courier\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"Nombre\",\n      field: \"name\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"País de origen\",\n      field: \"originCountry\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"País de destino\",\n      field: \"finalCountry\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"Fecha de salida\",\n      field: \"departureDate\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"Fecha de llegada\",\n      field: \"arrivalDate\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"Estado\",\n      field: \"status\",\n      sortable: true,\n      filter: true\n    }, {\n      headerName: \"Proveedor\",\n      field: \"provider\",\n      sortable: true,\n      filter: true\n    }];\n    const defaultColDef = {\n      flex: 1,\n      minWidth: 100,\n      resizable: true\n    };\n    const groupedItems = computed(() => {\n      return dataModel.value.reduce((groups, item) => {\n        const group = groups[item.courier] || [];\n        group.push(item);\n        groups[item.courier] = group;\n        return groups;\n      }, {});\n    });\n    const selectedCount = computed(() => {\n      return selectedItems.value.length;\n    });\n    const startDrag = (event, item) => {\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(item));\n    };\n    const onDrop = event => {\n      event.preventDefault();\n      const item = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n      handleDrop(item);\n    };\n    const handleDrop = async item => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`http://localhost:3001/products/${item.name}`);\n        droppedItems.value.push({\n          ...item,\n          ...response.data\n        });\n        droppedItems.value = droppedItems.value.slice();\n      } catch (error) {\n        console.error(\"Error al realizar la solicitud HTTP:\", error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const itemIsDropped = item => {\n      return droppedItems.value.some(droppedItem => droppedItem.name === item.name && droppedItem.courier === item.courier);\n    };\n    const removeItems = () => {\n      droppedItems.value = droppedItems.value.filter(item => !selectedItems.value.includes(item));\n      selectedItems.value = [];\n    };\n    const onSelectionChanged = event => {\n      selectedItems.value = event.api.getSelectedRows();\n    };\n    const rowSelection = ref(\"multiple\");\n    const gridApi = ref(null);\n    const onGridReady = params => {\n      gridApi.value = params.api;\n    };\n    const navigateToHome = () => {\n      router.push(\"/\");\n    };\n    const __returned__ = {\n      droppedItems,\n      loading,\n      selectedItems,\n      router,\n      dataModel,\n      columnDefs,\n      defaultColDef,\n      groupedItems,\n      selectedCount,\n      startDrag,\n      onDrop,\n      handleDrop,\n      itemIsDropped,\n      removeItems,\n      onSelectionChanged,\n      rowSelection,\n      gridApi,\n      onGridReady,\n      navigateToHome,\n      ref,\n      computed,\n      get AgGridVue() {\n        return AgGridVue;\n      },\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","AgGridVue","axios","useRouter","droppedItems","loading","selectedItems","router","dataModel","name","courier","columnDefs","field","maxWidth","checkboxSelection","headerCheckboxSelection","headerName","sortable","filter","defaultColDef","flex","minWidth","resizable","groupedItems","value","reduce","groups","item","group","push","selectedCount","length","startDrag","event","dataTransfer","setData","JSON","stringify","onDrop","preventDefault","parse","getData","handleDrop","response","get","data","slice","error","console","itemIsDropped","some","droppedItem","removeItems","includes","onSelectionChanged","api","getSelectedRows","rowSelection","gridApi","onGridReady","params","navigateToHome"],"sources":["/home/vicente/Cosas/Programacion/prueba-dawipo/frontend/src/Dashboard/Pages/DashPrueba.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\n\nconst droppedItems = ref([]); // Array to store dropped items\nconst loading = ref(false);\nconst selectedItems = ref([]);\nconst router = useRouter();\n\nconst dataModel = ref([\n  { name: \"Neumaticos\", courier: \"DHL\" },\n  { name: \"Remeras\", courier: \"DHL\" },\n]);\nconst columnDefs = [\n  {\n    field: \"Seleccionar\",\n    maxWidth: 140,\n    checkboxSelection: true,\n    headerCheckboxSelection: true,\n  },\n  {\n    headerName: \"Transportista\",\n    field: \"courier\",\n    sortable: true,\n    filter: true,\n  },\n  { headerName: \"Nombre\", field: \"name\", sortable: true, filter: true },\n  {\n    headerName: \"País de origen\",\n    field: \"originCountry\",\n    sortable: true,\n    filter: true,\n  },\n  {\n    headerName: \"País de destino\",\n    field: \"finalCountry\",\n    sortable: true,\n    filter: true,\n  },\n  {\n    headerName: \"Fecha de salida\",\n    field: \"departureDate\",\n    sortable: true,\n    filter: true,\n  },\n  {\n    headerName: \"Fecha de llegada\",\n    field: \"arrivalDate\",\n    sortable: true,\n    filter: true,\n  },\n  { headerName: \"Estado\", field: \"status\", sortable: true, filter: true },\n  { headerName: \"Proveedor\", field: \"provider\", sortable: true, filter: true },\n];\nconst defaultColDef = {\n  flex: 1,\n  minWidth: 100,\n  resizable: true,\n};\n\nconst groupedItems = computed(() => {\n  return dataModel.value.reduce((groups, item) => {\n    const group = groups[item.courier] || [];\n    group.push(item);\n    groups[item.courier] = group;\n    return groups;\n  }, {});\n});\n\nconst selectedCount = computed(() => {\n  return selectedItems.value.length;\n});\n\nconst startDrag = (event, item) => {\n  event.dataTransfer.setData(\"text/plain\", JSON.stringify(item));\n};\n\nconst onDrop = (event) => {\n  event.preventDefault();\n  const item = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n  handleDrop(item);\n};\n\nconst handleDrop = async (item) => {\n  loading.value = true;\n  try {\n    const response = await axios.get(\n      `http://localhost:3001/products/${item.name}`,\n    );\n    droppedItems.value.push({ ...item, ...response.data });\n    droppedItems.value = droppedItems.value.slice();\n  } catch (error) {\n    console.error(\"Error al realizar la solicitud HTTP:\", error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst itemIsDropped = (item) => {\n  return droppedItems.value.some(\n    (droppedItem) =>\n      droppedItem.name === item.name && droppedItem.courier === item.courier,\n  );\n};\n\nconst removeItems = () => {\n  droppedItems.value = droppedItems.value.filter(\n    (item) => !selectedItems.value.includes(item),\n  );\n  selectedItems.value = [];\n};\n\nconst onSelectionChanged = (event) => {\n  selectedItems.value = event.api.getSelectedRows();\n};\n\nconst rowSelection = ref(\"multiple\");\nconst gridApi = ref(null);\n\nconst onGridReady = (params) => {\n  gridApi.value = params.api;\n};\n\nconst navigateToHome = () => {\n  router.push(\"/\");\n};\n</script>\n\n<template>\n  <div class=\"container\">\n    <h1>Dashboard</h1>\n    <p>Seleccioná y arrastrá los elementos a la zona de soltar.</p>\n    <div class=\"drag-section\">\n      <div class=\"drag-inside\">\n        <div\n          class=\"drag-container\"\n          v-for=\"(items, courier) in groupedItems\"\n          :key=\"courier\"\n        >\n          <h3>{{ courier }}</h3>\n          <div\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            :class=\"{ 'drag-el': true, disabled: itemIsDropped(item) }\"\n            @dragstart=\"startDrag($event, item)\"\n            :draggable=\"!itemIsDropped(item)\"\n          >\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n      <div class=\"drop-area\" @dragover.prevent @drop=\"onDrop\">\n        <h2>Soltar acá</h2>\n        <div v-if=\"droppedItems.length\">\n          <button class=\"btn-danger\" @click=\"removeItems\">\n            Eliminar Seleccionados ({{ selectedCount }})\n          </button>\n          <ag-grid-vue\n            class=\"ag-theme-alpine\"\n            style=\"width: 100%; height: 400px\"\n            :columnDefs=\"columnDefs\"\n            :rowData=\"droppedItems\"\n            :defaultColDef=\"defaultColDef\"\n            :rowSelection=\"rowSelection\"\n            @grid-ready=\"onGridReady\"\n            @selection-changed=\"onSelectionChanged\"\n          ></ag-grid-vue>\n        </div>\n        <div v-else-if=\"loading\" class=\"loading\">\n          <svg class=\"pl\" width=\"240\" height=\"240\" viewBox=\"0 0 240 240\">\n            <circle\n              class=\"pl__ring pl__ring--a\"\n              cx=\"120\"\n              cy=\"120\"\n              r=\"105\"\n              fill=\"none\"\n              stroke=\"#000\"\n              stroke-width=\"20\"\n              stroke-dasharray=\"0 660\"\n              stroke-dashoffset=\"-330\"\n              stroke-linecap=\"round\"\n            ></circle>\n            <circle\n              class=\"pl__ring pl__ring--b\"\n              cx=\"120\"\n              cy=\"120\"\n              r=\"35\"\n              fill=\"none\"\n              stroke=\"#000\"\n              stroke-width=\"20\"\n              stroke-dasharray=\"0 220\"\n              stroke-dashoffset=\"-110\"\n              stroke-linecap=\"round\"\n            ></circle>\n            <circle\n              class=\"pl__ring pl__ring--c\"\n              cx=\"85\"\n              cy=\"120\"\n              r=\"70\"\n              fill=\"none\"\n              stroke=\"#000\"\n              stroke-width=\"20\"\n              stroke-dasharray=\"0 440\"\n              stroke-linecap=\"round\"\n            ></circle>\n            <circle\n              class=\"pl__ring pl__ring--d\"\n              cx=\"155\"\n              cy=\"120\"\n              r=\"70\"\n              fill=\"none\"\n              stroke=\"#000\"\n              stroke-width=\"20\"\n              stroke-dasharray=\"0 440\"\n              stroke-linecap=\"round\"\n            ></circle>\n          </svg>\n        </div>\n        <p v-else>No items dropped</p>\n      </div>\n    </div>\n  </div>\n  <button @click=\"navigateToHome\">Go to Home</button>\n</template>\n\n<style>\n.container {\n  padding: 20px;\n}\n.drag-section {\n  display: flex;\n}\n.drag-inside {\n  display: flex;\n  flex-wrap: wrap;\n}\n.drag-container {\n  margin-right: 20px;\n}\n.drag-el {\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  background-color: #f9f9f9;\n  cursor: move;\n}\n.drag-el.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n.drop-area {\n  flex-grow: 1;\n  padding: 20px;\n  border: 2px dashed #ccc;\n  background-color: #fafafa;\n}\n.btn-danger {\n  background-color: red;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-top: 10px;\n  cursor: pointer;\n}\n.btn-danger:hover {\n  background-color: darkred;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}